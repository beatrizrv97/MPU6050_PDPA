//Programa : Teste MPU6050 e LCD 20x4
//Alteracoes e adaptacoes : Beatriz Ribeiro e Clara Gadelha
//
//Baseado no programa original de JohnChi e do FELIPFLOP
 
//Carrega a biblioteca Wire
#include <I2Cdev.h>
#include <MPU6050.h>
#include <Wire.h>

// Conexão WI-FI e THINGSPEAK

String apiKey = "";     // Colocar a Chave API de Escrita do site ThingSpeak dentro do ""

const char* ssid = "";  // Colocar a Rede Wi Fi dentro do ""
const char* password = "";  //Colocar a Senha do Wi Fi dentro do ""
const char* server = "api.thingspeak.com";

//Endereco I2C do MPU6050
const int MPU=0x68;  
//Variaveis para armazenar valores dos sensores
int AcX,AcY,AcZ,Tmp,GyX,GyY,GyZ,AngX,AngY,AngZ;

//Variaveis para angulo de inclinação

int minVal=265;
int maxVal=402;

double x;
double y;
double z;

void setup()
{
  Serial.begin(9600);
  Wire.begin();
  Wire.beginTransmission(MPU);
  Wire.write(0x6B); 
   
  //Inicializa o MPU-6050
  Wire.write(0); 
  Wire.endTransmission(true);

Serial.println("Conectando a: ");
       Serial.println(ssid);
 
}

void loop()
{
  Wire.beginTransmission(MPU);
  Wire.write(0x3B);  // starting with register 0x3B (ACCEL_XOUT_H)
  Wire.endTransmission(false);
  //Solicita os dados do sensor
  Wire.requestFrom(MPU,14,true);  
  //Armazena o valor dos sensores nas variaveis correspondentes
  AcX=Wire.read()<<8|Wire.read();  //0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)     
  AcY=Wire.read()<<8|Wire.read();  //0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)
  AcZ=Wire.read()<<8|Wire.read();  //0x3F (ACCEL_ZOUT_H) & 0x40 (ACCEL_ZOUT_L)
  Tmp=Wire.read()<<8|Wire.read();  //0x41 (TEMP_OUT_H) & 0x42 (TEMP_OUT_L)
  GyX=Wire.read()<<8|Wire.read();  //0x43 (GYRO_XOUT_H) & 0x44 (GYRO_XOUT_L)
  GyY=Wire.read()<<8|Wire.read();  //0x45 (GYRO_YOUT_H) & 0x46 (GYRO_YOUT_L)
  GyZ=Wire.read()<<8|Wire.read();  //0x47 (GYRO_ZOUT_H) & 0x48 (GYRO_ZOUT_L)

// Variaveis para o calculo do angulo rotaçao 
long tempo_prev;
float dt;
float ang_x, ang_y;
float ang_x_prev, ang_y_prev;
float ax_m_s2,ay_m_s2,az_m_s2;

//Calculos 
//Calcular os Angulos de Inclinaçao (X,Y,Z)
    int xAng = map(AcX,minVal,maxVal,-90,90);
    int yAng = map(AcY,minVal,maxVal,-90,90);
    int zAng = map(AcZ,minVal,maxVal,-90,90);

       x= RAD_TO_DEG * (atan2(-yAng, -zAng)+PI);
       y= RAD_TO_DEG * (atan2(-xAng, -zAng)+PI);
       z= RAD_TO_DEG * (atan2(-yAng, -xAng)+PI);
   
  // Transformar os valores do acelerometro inicialmente lidos em bits para m/s²
  
   ax_m_s2 = AcX * (9.81/16384.0);
   ay_m_s2 = AcY * (9.81/16384.0);
   az_m_s2 = AcZ * (9.81/16384.0);

  
  // Angulos de Rotaçao com filtro de interferencia //
  // Angulos com o acelerometro em radiano -> Não seria Grau ???
  float acel_ang_x=atan(AcY/sqrt(pow(AcX,2) + pow(AcZ,2)))*(180.0/PI);
  float acel_ang_y=atan(-AcX/sqrt(pow(AcY,2) + pow(AcZ,2)))*(180.0/PI);

  //Calcular o angulo de rotação com o giroscopio e filtro de complemento
  ang_x = 0.98*(ang_x_prev+(GyX/131)*dt) + 0.02*acel_ang_x;
  ang_y = 0.98*(ang_y_prev+(GyY/131)*dt) + 0.02*acel_ang_y;

void PrintarInforma();

  // Mostrar os angulos (X,Y,Z)
  Serial.println(" Angulo de Inclinacao");
  Serial.print(" X: "); Serial.print(x); Serial.print("º"); 
  Serial.print(" Y: ");  Serial.print(y); Serial.print("º");
  Serial.print(" Z: ");  Serial.print(z); Serial.println("º");
  
  // Mostrar os angulos de rotaçao Giroscopio
  Serial.println(" Angulo de Rotacao");
  Serial.print(" X: "); Serial.print(ang_x);  Serial.print("º");
  Serial.print(" Y: "); Serial.print(ang_y); Serial.println("º");

  // Aceleraçoes Angulares
 
  Serial.println(" Aceleracao Angular");
  Serial.print(" X:");Serial.print(ax_m_s2); Serial.print(" m/s2"); Serial.print("\t");
  Serial.print(" Y:");Serial.print(ay_m_s2); Serial.print(" m/s2");  Serial.print("\t");
  Serial.print(" Z:");Serial.print(az_m_s2); Serial.print(" m/s2"); Serial.println("\t");
  
  Serial.println(" Aceleracao Original");
  Serial.print(" AX:");Serial.print(AcX); Serial.print(" m/s2"); Serial.print("\t");
  Serial.print(" AY:");Serial.print(AcY); Serial.print(" m/s2"); Serial.print("\t");
  Serial.print(" AZ:");Serial.print(AcZ); Serial.print(" m/s2"); Serial.println("\t");
  
  delay(3000);
}
